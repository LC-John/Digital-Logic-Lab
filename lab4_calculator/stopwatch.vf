////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : stopwatch.vf
// /___/   /\     Timestamp : 06/17/2018 16:30:13
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan3e -verilog C:/Users/DrLC/Downloads/LogicalLab/lab4_calculator/stopwatch.vf -w C:/Users/DrLC/Downloads/LogicalLab/lab4_calculator/stopwatch.sch
//Design Name: stopwatch
//Device: spartan3e
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module counter163_MUSER_stopwatch(CLK, 
                                  CLR, 
                                  EN, 
                                  D);

    input CLK;
    input CLR;
    input EN;
   output [3:0] D;
   
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_13;
   wire XLXN_16;
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_26;
   wire XLXN_27;
   wire [3:0] D_DUMMY;
   
   assign D[3:0] = D_DUMMY[3:0];
   FDC #( .INIT(1'b0) ) XLXI_1 (.C(XLXN_9), 
               .CLR(CLR), 
               .D(XLXN_16), 
               .Q(D_DUMMY[1]));
   FDC #( .INIT(1'b0) ) XLXI_3 (.C(XLXN_9), 
               .CLR(CLR), 
               .D(XLXN_10), 
               .Q(D_DUMMY[0]));
   FDC #( .INIT(1'b0) ) XLXI_4 (.C(XLXN_9), 
               .CLR(CLR), 
               .D(XLXN_20), 
               .Q(D_DUMMY[2]));
   FDC #( .INIT(1'b0) ) XLXI_5 (.C(XLXN_9), 
               .CLR(CLR), 
               .D(XLXN_27), 
               .Q(D_DUMMY[3]));
   XOR2  XLXI_6 (.I0(D_DUMMY[0]), 
                .I1(XLXN_13), 
                .O(XLXN_10));
   XOR2  XLXI_7 (.I0(D_DUMMY[1]), 
                .I1(D_DUMMY[0]), 
                .O(XLXN_16));
   XOR2  XLXI_8 (.I0(D_DUMMY[2]), 
                .I1(XLXN_19), 
                .O(XLXN_20));
   XOR2  XLXI_9 (.I0(D_DUMMY[3]), 
                .I1(XLXN_26), 
                .O(XLXN_27));
   AND2  XLXI_10 (.I0(EN), 
                 .I1(CLK), 
                 .O(XLXN_9));
   AND2  XLXI_11 (.I0(D_DUMMY[0]), 
                 .I1(D_DUMMY[1]), 
                 .O(XLXN_19));
   AND3  XLXI_12 (.I0(D_DUMMY[0]), 
                 .I1(D_DUMMY[1]), 
                 .I2(D_DUMMY[2]), 
                 .O(XLXN_26));
   VCC  XLXI_13 (.P(XLXN_13));
endmodule
`timescale 1ns / 1ps

module mod6_MUSER_stopwatch(CLK, 
                            CLR, 
                            EN, 
                            D, 
                            RCO);

    input CLK;
    input CLR;
    input EN;
   output [3:0] D;
   output RCO;
   
   wire XLXN_1;
   wire XLXN_9;
   wire XLXN_10;
   wire [3:0] D_DUMMY;
   wire RCO_DUMMY;
   
   assign D[3:0] = D_DUMMY[3:0];
   assign RCO = RCO_DUMMY;
   counter163_MUSER_stopwatch  XLXI_1 (.CLK(CLK), 
                                      .CLR(XLXN_1), 
                                      .EN(EN), 
                                      .D(D_DUMMY[3:0]));
   OR2  XLXI_2 (.I0(CLR), 
               .I1(RCO_DUMMY), 
               .O(XLXN_1));
   INV  XLXI_3 (.I(D_DUMMY[0]), 
               .O(XLXN_9));
   INV  XLXI_5 (.I(D_DUMMY[3]), 
               .O(XLXN_10));
   AND4  XLXI_6 (.I0(XLXN_10), 
                .I1(D_DUMMY[2]), 
                .I2(D_DUMMY[1]), 
                .I3(XLXN_9), 
                .O(RCO_DUMMY));
endmodule
`timescale 1ns / 1ps

module mod10_MUSER_stopwatch(CLK, 
                             CLR, 
                             EN, 
                             D, 
                             RCO);

    input CLK;
    input CLR;
    input EN;
   output [3:0] D;
   output RCO;
   
   wire XLXN_1;
   wire XLXN_7;
   wire XLXN_8;
   wire [3:0] D_DUMMY;
   wire RCO_DUMMY;
   
   assign D[3:0] = D_DUMMY[3:0];
   assign RCO = RCO_DUMMY;
   counter163_MUSER_stopwatch  XLXI_2 (.CLK(CLK), 
                                      .CLR(XLXN_1), 
                                      .EN(EN), 
                                      .D(D_DUMMY[3:0]));
   OR2  XLXI_3 (.I0(CLR), 
               .I1(RCO_DUMMY), 
               .O(XLXN_1));
   INV  XLXI_4 (.I(D_DUMMY[0]), 
               .O(XLXN_7));
   INV  XLXI_5 (.I(D_DUMMY[2]), 
               .O(XLXN_8));
   AND4  XLXI_6 (.I0(D_DUMMY[3]), 
                .I1(XLXN_8), 
                .I2(D_DUMMY[1]), 
                .I3(XLXN_7), 
                .O(RCO_DUMMY));
endmodule
`timescale 1ns / 1ps

module stopwatch(an, 
                 btnH, 
                 btnR, 
                 btnS, 
                 mclk, 
                 dp, 
                 seg);

    input [3:0] an;
    input btnH;
    input btnR;
    input btnS;
    input mclk;
   output dp;
   output [6:0] seg;
   
   wire XLXN_25;
   wire XLXN_29;
   wire XLXN_33;
   wire XLXN_39;
   wire XLXN_40;
   wire XLXN_49;
   wire [3:0] XLXN_53;
   wire [3:0] XLXN_54;
   wire [3:0] XLXN_55;
   wire [3:0] XLXN_56;
   wire [3:0] XLXN_57;
   wire XLXN_58;
   
   mod10_MUSER_stopwatch  XLXI_1 (.CLK(XLXN_29), 
                                 .CLR(btnR), 
                                 .EN(XLXN_33), 
                                 .D(XLXN_55[3:0]), 
                                 .RCO(XLXN_39));
   mod10_MUSER_stopwatch  XLXI_2 (.CLK(XLXN_29), 
                                 .CLR(btnR), 
                                 .EN(XLXN_39), 
                                 .D(XLXN_56[3:0]), 
                                 .RCO(XLXN_58));
   mod10_MUSER_stopwatch  XLXI_3 (.CLK(XLXN_29), 
                                 .CLR(btnR), 
                                 .EN(XLXN_49), 
                                 .D(XLXN_57[3:0]), 
                                 .RCO());
   mod6_MUSER_stopwatch  XLXI_4 (.CLK(XLXN_29), 
                                .CLR(btnR), 
                                .EN(XLXN_40), 
                                .D(XLXN_54[3:0]), 
                                .RCO(XLXN_49));
   decoder  XLXI_5 (.an(an[3:0]), 
                   .btnH(btnH), 
                   .IN0(XLXN_55[3:0]), 
                   .IN1(XLXN_56[3:0]), 
                   .IN2(XLXN_54[3:0]), 
                   .IN3(XLXN_57[3:0]), 
                   .dp(dp), 
                   .OUTseg(XLXN_53[3:0]));
   divider  XLXI_7 (.mclk(mclk), 
                   .CLK(XLXN_25));
   BUFG  XLXI_8 (.I(XLXN_25), 
                .O(XLXN_29));
   pause  XLXI_10 (.btn0(btnR), 
                  .btn1(btnS), 
                  .mclk(mclk), 
                  .EN(XLXN_33));
   AND2  XLXI_11 (.I0(XLXN_39), 
                 .I1(XLXN_58), 
                 .O(XLXN_40));
   seven_LEDs  XLXI_12 (.BCD(XLXN_53[3:0]), 
                       .seg(seg[6:0]));
endmodule
